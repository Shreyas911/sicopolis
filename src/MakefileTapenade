all: drivergrdchk_cov drivergrdchk driveradjoint driverforward cov drivernormal

ifndef F90C
F90C=gfortran
endif
ifndef CC
CC=gcc
endif

PYTHONCMD=python

ifndef HEADER
HEADER=repo_grl16_bm5_ss25ka
endif

ifndef DOMAIN_SHORT
DOMAIN_SHORT=grl
endif

ifndef GENCTRL
GENCTRL := $(shell python3 subroutines/tapenade/utils/check_GENCTRL.py -f ../headers_ad/ad_${HEADER}.h)
### PRINT STATEMENT TO CHECK VARIABLE ###
ifeq ($(GENCTRL),0)
$(info GENCTRL is $(GENCTRL), hence genctrl setup is inactive!!)
endif
ifeq ($(GENCTRL),1)
$(info GENCTRL is $(GENCTRL), hence genctrl setup is active!!)
DEFINE_FLAGS_GENCTRL= -DALLOW_GENCTRL
endif
endif

ifndef DISC_AND_GRL
DISC_AND_GRL := $(shell python3 subroutines/tapenade/utils/check_GRL_DISC.py -f ../headers/sico_specs_${HEADER}.h)
### PRINT STATEMENT TO CHECK VARIABLE ###
ifeq ($(DISC_AND_GRL),0)
$(info DISC_AND_GRL is $(DISC_AND_GRL))
### sico_vars_m.F90 is not differentiatied when DISC=0 ###
### We still need to compile it though!                ###
SICO_VARS_OBJ=sico_vars_m_cpp.o
endif
ifeq ($(DISC_AND_GRL),1)
$(info DISC_AND_GRL is $(DISC_AND_GRL))
$(info Domain is GRL, with discharge workers active.)
endif
endif

ifndef LISDIR
ifeq ($(F90C),gfortran)
LISDIR=/home/shreyas/lis-2.1.3/installation
endif
ifeq ($(F90C),ifort)
LISDIR=/home/shreyas/lis-2.1.3-intel/installation
endif
endif

ifdef LISDIR
LIBLIS=${LISDIR}/lib/liblis.so
LIBLISFLAG=-L${LISDIR}/lib -llis
LISFLAG=-DBUILD_LIS -I${LISDIR}/include/
endif

ifndef NETCDF_FORTRAN_DIR
ifeq ($(F90C),gfortran)
NETCDF_FORTRAN_DIR=/opt/ohpc/pub/libs/gnu12/openmpi4/netcdf-fortran/4.6.0
endif
ifeq ($(F90C),ifort)
NETCDF_FORTRAN_DIR=/opt/ohpc/pub/libs/intel/openmpi4/netcdf-fortran/4.6.0
endif
endif

ifndef ADFirstAidKit_DIR
ADFirstAidKit_DIR=subroutines/tapenade/ADFirstAidKit
endif

### Multiple if statements here since for CI, we define the individual flags separately.
### Note - If you have direct access to netcdf.mod and libnetcdff.so in different directories, you'd have to set the flags manually.
### As mentioned, see CI yml file to understand more.
ifndef NETCDF_F90_FLAG
ifndef LIB_NETCDF_F90_FLAG
ifdef NETCDF_FORTRAN_DIR
LIB_NETCDF_F90=${NETCDF_FORTRAN_DIR}/lib/libnetcdff.so
LIB_NETCDF_F90_FLAG=-L${NETCDF_FORTRAN_DIR}/lib -lnetcdff
NETCDF_F90_FLAG=-I${NETCDF_FORTRAN_DIR}/include/
endif
endif
endif

ifndef FLOW_TAPAD_FILE
ifeq ($(F90C),ifort)
FLOW_TAPAD_FILE := subroutines/tapenade/flow/flow_tapad_intel
endif
ifeq ($(F90C),gfortran)
FLOW_TAPAD_FILE := subroutines/tapenade/flow/flow_tapad_gnu
endif
endif

ifndef GCOV
ifeq ($(F90C),gfortran)
GCOV=/opt/ohpc/pub/compiler/gcc/5.4.0/bin/gcov
endif
ifeq ($(F90C),ifort)
$(info GCOV does not work with intel compiler.)
endif
endif

ifndef LCOV
LCOV=/usr/bin/lcov
endif

$(info TAP_ADJ_PROF is $(TAP_ADJ_PROF).)
ifeq ($(TAP_ADJ_PROF),1)
driveradjoint: TAP_PROF_OPTION=-profile
driveradjoint: CFLAGS_PROF=-D_ADSTACKPROFILE -D_ADSTACKPREFETCH
driveradjoint: DEFINE_FLAGS_ADJOINT_PROF=-DALLOW_TAP_ADJ_PROF
endif

ifeq ($(F90C),gfortran)
F90FLAGS_COV= --coverage -fprofile-arcs -ftest-coverage -O0 -g -DRUN_SPECS_HEADER=\"sico_specs.h\" -mcmodel=medium -fno-range-check -ffpe-trap=invalid,zero -ffree-line-length-none
CFLAGS_COV= --coverage -fprofile-arcs -ftest-coverage -O0 -g
F90FLAGS= -O3 -g -DRUN_SPECS_HEADER=\"sico_specs.h\" -mcmodel=medium -fno-range-check -ffpe-trap=invalid,zero -ffree-line-length-none
CFLAGS= -O3 -g
endif

ifeq ($(F90C),ifort)
$(info ifort might not work well with the genctrl setup since -extend-source can extend line length limit to max 132 columns.)
$(info This remains untested, so can consider a higher value than 132 probably.)
F90FLAGS= -m64 -convert big_endian -assume byterecl -mcmodel=medium -O2 -align -ip -fp-model source -xHost -DRUN_SPECS_HEADER=\"sico_specs.h\" -extend-source 132
CFLAGS= -O0 -ip -m64 -xHost -mcmodel=medium -DWORDLENGTH=4 -DDEFAULT_R8
endif

IN_PATH_NORMAL=../sico_in
OUT_PATH_NORMAL=../sico_out/N_${HEADER}
DEFINE_FLAGS_NORMAL= -DIN_PATH=\"${IN_PATH_NORMAL}\" -DOUT_PATH=\"${OUT_PATH_NORMAL}\" -DNETCDF=1 -DHEADER=\"${HEADER}\"

IN_PATH_GRDCHK=../sico_in
OUT_PATH_GRDCHK=../sico_out/GRDCHK_${HEADER}
DEFINE_FLAGS_GRDCHK= -DALLOW_GRDCHK -DIN_PATH=\"${IN_PATH_GRDCHK}\" -DOUT_PATH=\"${OUT_PATH_GRDCHK}\" -DNETCDF=1 -DHEADER=\"${HEADER}\"

IN_PATH_ADJOINT=../sico_in
OUT_PATH_ADJOINT=../sico_out/ADJOINT_${HEADER}
driveradjoint: TAP_MODE_FLAG=ALLOW_TAP_ADJ
driverforward: TAP_MODE_FLAG=ALLOW_TAP_TLM
DEFINE_FLAGS_ADJOINT= -DDATE=\"14/02/24\" -DVERSION=\"v23.12\" -DALLOW_TAPENADE -D${TAP_MODE_FLAG} ${DEFINE_FLAGS_ADJOINT_PROF} -DIN_PATH=\"${IN_PATH_ADJOINT}\" -DOUT_PATH=\"${OUT_PATH_ADJOINT}\"

SRC_SICO=\
subroutines/general/sico_types_m.F90\
subroutines/general/compare_float_m.F90\
subroutines/general/sico_variables_m.F90\
subroutines/grl/sico_vars_m.F90\
subroutines/general/ice_material_properties_m.F90\
subroutines/general/stereo_proj_m.F90\
subroutines/general/metric_m.F90\
subroutines/general/nc_check_m.F90\
subroutines/general/read_m.F90\
subroutines/general/mask_update_sea_level_m.F90\
subroutines/general/pdd_m.F90\
subroutines/general/calving_m.F90\
subroutines/grl/discharge_workers_m.F90\
subroutines/general/calc_vxy_m.F90\
subroutines/general/calc_vz_m.F90\
subroutines/general/calc_dxyz_m.F90\
subroutines/general/calc_gia_m.F90\
subroutines/general/topograd_m.F90\
subroutines/general/calc_thk_m.F90\
subroutines/general/enth_temp_omega_m.F90\
subroutines/general/calc_temp_m.F90\
subroutines/general/calc_temp_enth_m.F90\
subroutines/general/calc_enhance_m.F90\
subroutines/general/calc_temp_melt_bas_m.F90\
subroutines/general/calc_bas_melt_m.F90\
subroutines/general/calc_thk_water_bas_m.F90\
subroutines/grl/boundary_m.F90\
subroutines/ant/boundary_m.F90\
subroutines/general/sico_main_loop_m.F90\
subroutines/tapenade/stubs/sico_maths_m_stub.F90\
subroutines/grl/sico_init_m.F90\
subroutines/ant/sico_init_m.F90\
subroutines/general/error_m.F90\
subroutines/general/init_temp_water_age_m.F90

SRC_SICO_AD_GRDCHK=\
subroutines/tapenade/grdchk/grdchk_m.F90

SRC_SICO_AD_COST=\
subroutines/tapenade/cost/cost_io_m.F90\
subroutines/tapenade/cost/cost_m.F90

SRC_SICO_AD_CTRL=\
subroutines/tapenade/ctrl/ctrl_map_genarr_m.F90 \
subroutines/tapenade/ctrl/ctrl_init_genarr_m.F90 \
subroutines/tapenade/ctrl/ctrl_map_gentim_m.F90

SRC_SICO_AD_IO=\
subroutines/tapenade/ad_io/ad_output_m.F90 \
subroutines/tapenade/ad_io/ad_input_m.F90

SRC=\
sicopolis.F90

SRC_TAP_F90=\
tapenade_main.F90

SRC_TAP=\
${ADFirstAidKit_DIR}/adStack.c \
${ADFirstAidKit_DIR}/adBinomial.c \
${ADFirstAidKit_DIR}/adProfile.c \
${ADFirstAidKit_DIR}/adFixedPoint.c

SRC_HEADERS=\
sico_specs.h \
ad_specs.h

CPPCMD = cat $< |  cpp -DRUN_SPECS_HEADER=\"sico_specs.h\" -DALLOW_TAPENADE=1 -I../ -I./ -traditional-cpp -P 

CPPCMD_FILES = cat $< |  cpp -DRUN_SPECS_HEADER=\"sico_specs.h\" -imacros sico_specs.h -imacros ad_specs.h ${DEFINE_FLAGS_ADJOINT} ${LISFLAG} -I${ADFirstAidKit_DIR} -traditional-cpp -P

ifeq ($(GENCTRL),0)
ifeq ($(DISC_AND_GRL),0)
SRC_AD=sico_variables_m_cpp.f90 ice_material_properties_m_cpp.f90 cost_io_m_cpp.f90 cost_m_cpp.f90 enth_temp_omega_m_cpp.f90 stereo_proj_m_cpp.f90 read_m_cpp.f90 mask_update_sea_level_m_cpp.f90 pdd_m_cpp.f90 boundary_m_cpp.f90 init_temp_water_age_m_cpp.f90 calc_enhance_m_cpp.f90 flag_update_gf_gl_cf_m_cpp.f90 calc_vxy_m_cpp.f90 calc_vz_m_cpp.f90 calc_dxyz_m_cpp.f90 calc_temp_melt_bas_m_cpp.f90 output_m_cpp.f90 metric_m_cpp.f90 topograd_m_cpp.f90 calc_temp_m_cpp.f90 calc_temp_enth_m_cpp.f90 calc_gia_m_cpp.f90 calc_thk_m_cpp.f90 calc_bas_melt_m_cpp.f90 calc_thk_water_bas_m_cpp.f90 sico_init_m_cpp.f90 sico_main_loop_m_cpp.f90 sico_end_m_cpp.f90 sicopolis_tapenade_cpp.f90

SRC_AD_INPUT=sicopolis_tapenade_cpp.f90 sico_maths_m_stub_cpp.f90 error_m_cpp.f90 sico_vars_m_cpp.f90 sico_variables_m_cpp.f90 ice_material_properties_m_cpp.f90 cost_io_m_cpp.f90 cost_m_cpp.f90 enth_temp_omega_m_cpp.f90 stereo_proj_m_cpp.f90 nc_check_m_stub_cpp.f90 netcdf_stub_cpp.f90 read_m_cpp.f90 mask_update_sea_level_m_cpp.f90 pdd_m_cpp.f90 boundary_m_cpp.f90 init_temp_water_age_m_cpp.f90 calc_enhance_m_cpp.f90 flag_update_gf_gl_cf_m_cpp.f90 calc_vxy_m_cpp.f90 calc_vz_m_cpp.f90 calc_dxyz_m_cpp.f90 calc_temp_melt_bas_m_cpp.f90 output_m_cpp.f90 metric_m_cpp.f90 topograd_m_cpp.f90 calc_temp_m_cpp.f90 calc_temp_enth_m_cpp.f90 calc_gia_m_cpp.f90 calc_thk_m_cpp.f90 calc_bas_melt_m_cpp.f90 calc_thk_water_bas_m_cpp.f90 sico_init_m_cpp.f90 sico_main_loop_m_cpp.f90 sico_end_m_cpp.f90 sico_types_m_cpp.f90 compare_float_m_cpp.f90
endif

ifeq ($(DISC_AND_GRL),1)
SRC_AD=sico_vars_m_cpp.f90 sico_variables_m_cpp.f90 ice_material_properties_m_cpp.f90 cost_io_m_cpp.f90 cost_m_cpp.f90 enth_temp_omega_m_cpp.f90 stereo_proj_m_cpp.f90 read_m_cpp.f90 mask_update_sea_level_m_cpp.f90 pdd_m_cpp.f90 discharge_workers_m_cpp.f90 boundary_m_cpp.f90 init_temp_water_age_m_cpp.f90 calc_enhance_m_cpp.f90 flag_update_gf_gl_cf_m_cpp.f90 calc_vxy_m_cpp.f90 calc_vz_m_cpp.f90 calc_dxyz_m_cpp.f90 calc_temp_melt_bas_m_cpp.f90 output_m_cpp.f90 metric_m_cpp.f90 topograd_m_cpp.f90 calc_temp_m_cpp.f90 calc_temp_enth_m_cpp.f90 calc_gia_m_cpp.f90 calc_thk_m_cpp.f90 calc_bas_melt_m_cpp.f90 calc_thk_water_bas_m_cpp.f90 sico_init_m_cpp.f90 sico_main_loop_m_cpp.f90 sico_end_m_cpp.f90 sicopolis_tapenade_cpp.f90

SRC_AD_INPUT=sicopolis_tapenade_cpp.f90 discharge_workers_m_cpp.f90 sico_maths_m_stub_cpp.f90 error_m_cpp.f90 sico_vars_m_cpp.f90 sico_variables_m_cpp.f90  ice_material_properties_m_cpp.f90 cost_io_m_cpp.f90 cost_m_cpp.f90 enth_temp_omega_m_cpp.f90 stereo_proj_m_cpp.f90 nc_check_m_stub_cpp.f90 netcdf_stub_cpp.f90 read_m_cpp.f90 mask_update_sea_level_m_cpp.f90 pdd_m_cpp.f90 boundary_m_cpp.f90 init_temp_water_age_m_cpp.f90 calc_enhance_m_cpp.f90 flag_update_gf_gl_cf_m_cpp.f90 calc_vxy_m_cpp.f90 calc_vz_m_cpp.f90 calc_dxyz_m_cpp.f90 calc_temp_melt_bas_m_cpp.f90 output_m_cpp.f90 metric_m_cpp.f90 topograd_m_cpp.f90 calc_temp_m_cpp.f90 calc_temp_enth_m_cpp.f90 calc_gia_m_cpp.f90 calc_thk_m_cpp.f90 calc_bas_melt_m_cpp.f90 calc_thk_water_bas_m_cpp.f90 sico_init_m_cpp.f90 sico_main_loop_m_cpp.f90 sico_end_m_cpp.f90 sico_types_m_cpp.f90 compare_float_m_cpp.f90
endif
endif

ifeq ($(GENCTRL),1)
ifeq ($(DISC_AND_GRL),0)
SRC_AD=sico_variables_m_cpp.f90 ctrl_map_genarr_m_cpp.f90 ctrl_init_genarr_m_cpp.f90 ice_material_properties_m_cpp.f90 cost_io_m_cpp.f90 cost_m_cpp.f90 enth_temp_omega_m_cpp.f90 stereo_proj_m_cpp.f90 read_m_cpp.f90 mask_update_sea_level_m_cpp.f90 pdd_m_cpp.f90 ctrl_map_gentim_m_cpp.f90 boundary_m_cpp.f90 init_temp_water_age_m_cpp.f90 calc_enhance_m_cpp.f90 flag_update_gf_gl_cf_m_cpp.f90 calc_vxy_m_cpp.f90 calc_vz_m_cpp.f90 calc_dxyz_m_cpp.f90 calc_temp_melt_bas_m_cpp.f90 output_m_cpp.f90 metric_m_cpp.f90 topograd_m_cpp.f90 calc_temp_m_cpp.f90 calc_temp_enth_m_cpp.f90 calc_gia_m_cpp.f90 calc_thk_m_cpp.f90 calc_bas_melt_m_cpp.f90 calc_thk_water_bas_m_cpp.f90 sico_init_m_cpp.f90 sico_main_loop_m_cpp.f90 sico_end_m_cpp.f90 sicopolis_tapenade_cpp.f90

SRC_AD_INPUT=sicopolis_tapenade_cpp.f90 sico_maths_m_stub_cpp.f90 error_m_cpp.f90 sico_vars_m_cpp.f90 sico_variables_m_cpp.f90 ctrl_map_genarr_m_cpp.f90 ctrl_init_genarr_m_cpp.f90 ice_material_properties_m_cpp.f90 cost_io_m_cpp.f90 cost_m_cpp.f90 enth_temp_omega_m_cpp.f90 stereo_proj_m_cpp.f90 nc_check_m_stub_cpp.f90 netcdf_stub_cpp.f90 read_m_cpp.f90 mask_update_sea_level_m_cpp.f90 pdd_m_cpp.f90 ctrl_map_gentim_m_cpp.f90 boundary_m_cpp.f90 init_temp_water_age_m_cpp.f90 calc_enhance_m_cpp.f90 flag_update_gf_gl_cf_m_cpp.f90 calc_vxy_m_cpp.f90 calc_vz_m_cpp.f90 calc_dxyz_m_cpp.f90 calc_temp_melt_bas_m_cpp.f90 output_m_cpp.f90 metric_m_cpp.f90 topograd_m_cpp.f90 calc_temp_m_cpp.f90 calc_temp_enth_m_cpp.f90 calc_gia_m_cpp.f90 calc_thk_m_cpp.f90 calc_bas_melt_m_cpp.f90 calc_thk_water_bas_m_cpp.f90 sico_init_m_cpp.f90 sico_main_loop_m_cpp.f90 sico_end_m_cpp.f90 sico_types_m_cpp.f90 compare_float_m_cpp.f90
endif

ifeq ($(DISC_AND_GRL),1)
SRC_AD=sico_vars_m_cpp.f90 sico_variables_m_cpp.f90 ctrl_map_genarr_m_cpp.f90 ctrl_init_genarr_m_cpp.f90 ice_material_properties_m_cpp.f90 cost_io_m_cpp.f90 cost_m_cpp.f90 enth_temp_omega_m_cpp.f90 stereo_proj_m_cpp.f90 read_m_cpp.f90 mask_update_sea_level_m_cpp.f90 pdd_m_cpp.f90 discharge_workers_m_cpp.f90 ctrl_map_gentim_m_cpp.f90 boundary_m_cpp.f90 init_temp_water_age_m_cpp.f90 calc_enhance_m_cpp.f90 flag_update_gf_gl_cf_m_cpp.f90 calc_vxy_m_cpp.f90 calc_vz_m_cpp.f90 calc_dxyz_m_cpp.f90 calc_temp_melt_bas_m_cpp.f90 output_m_cpp.f90 metric_m_cpp.f90 topograd_m_cpp.f90 calc_temp_m_cpp.f90 calc_temp_enth_m_cpp.f90 calc_gia_m_cpp.f90 calc_thk_m_cpp.f90 calc_bas_melt_m_cpp.f90 calc_thk_water_bas_m_cpp.f90 sico_init_m_cpp.f90 sico_main_loop_m_cpp.f90 sico_end_m_cpp.f90 sicopolis_tapenade_cpp.f90

SRC_AD_INPUT=sicopolis_tapenade_cpp.f90 discharge_workers_m_cpp.f90 sico_maths_m_stub_cpp.f90 error_m_cpp.f90 sico_vars_m_cpp.f90 sico_variables_m_cpp.f90 ctrl_map_genarr_m_cpp.f90 ctrl_init_genarr_m_cpp.f90 ice_material_properties_m_cpp.f90 cost_io_m_cpp.f90 cost_m_cpp.f90 enth_temp_omega_m_cpp.f90 stereo_proj_m_cpp.f90 nc_check_m_stub_cpp.f90 netcdf_stub_cpp.f90 read_m_cpp.f90 mask_update_sea_level_m_cpp.f90 pdd_m_cpp.f90 ctrl_map_gentim_m_cpp.f90 boundary_m_cpp.f90 init_temp_water_age_m_cpp.f90 calc_enhance_m_cpp.f90 flag_update_gf_gl_cf_m_cpp.f90 calc_vxy_m_cpp.f90 calc_vz_m_cpp.f90 calc_dxyz_m_cpp.f90 calc_temp_melt_bas_m_cpp.f90 output_m_cpp.f90 metric_m_cpp.f90 topograd_m_cpp.f90 calc_temp_m_cpp.f90 calc_temp_enth_m_cpp.f90 calc_gia_m_cpp.f90 calc_thk_m_cpp.f90 calc_bas_melt_m_cpp.f90 calc_thk_water_bas_m_cpp.f90 sico_init_m_cpp.f90 sico_main_loop_m_cpp.f90 sico_end_m_cpp.f90 sico_types_m_cpp.f90 compare_float_m_cpp.f90
endif
endif

OBJ_AD_TLM=$(patsubst %.f90,%_d.o,$(SRC_AD))
OBJ_AD_ADJ=$(patsubst %.f90,%_b.o,$(SRC_AD))

$(OBJ_AD_TLM): %.o: %.f90
	${F90C} ${LISFLAG} ${NETCDF_F90_FLAG} -I./ ${F90FLAGS} -o $@ -c $<

$(OBJ_AD_ADJ): %.o: %.f90
	${F90C} ${LISFLAG} ${NETCDF_F90_FLAG} -I./ ${F90FLAGS} -o $@ -c $<

TAPENADECMD=tapenade
TAPENADE_HEAD_ROUTINE=sicopolis_tapenade
TAPENADE_CHECK_FILE_TLM=sicopolis_tapenade_cpp_d.f90
TAPENADE_CHECK_FILE_ADJ=sicopolis_tapenade_cpp_b.f90

driverforward:${LIBLIS} \
	${LIB_NETCDF_F90} \
	${SRC_HEADERS} \
	$(patsubst %.c,%.o,$(SRC_TAP)) \
	error_m_cpp.o \
	sico_types_m_cpp.o \
	compare_float_m_cpp.o \
	sico_maths_m_tlm_cpp.o \
	subroutines/tapenade/src/diffsizes.o \
	${SICO_VARS_OBJ} \
	nc_check_m_cpp.o \
	PHONY_TAP_TLM \
	${OBJ_AD_TLM} \
	ad_input_m_cpp.o \
	ad_output_m_cpp.o \
	tapenade_main_cpp.o
	${F90C} ${F90FLAGS} -o $@ \
		error_m_cpp.o \
		sico_types_m_cpp.o \
		compare_float_m_cpp.o \
		sico_maths_m_tlm_cpp.o \
		${SICO_VARS_OBJ} \
		nc_check_m_cpp.o \
		$(patsubst %.c,%.o,$(SRC_TAP)) \
		${OBJ_AD_TLM} \
		ad_input_m_cpp.o \
		ad_output_m_cpp.o \
		subroutines/tapenade/src/diffsizes.o \
		tapenade_main_cpp.o \
		${LIBLISFLAG} \
		${LIB_NETCDF_F90_FLAG}

.PHONY = PHONY_TAP_TLM
PHONY_TAP_TLM: ${SRC_AD_INPUT}
	@if [ ! -f ${TAPENADE_CHECK_FILE_TLM} ]; then\
		${TAPENADECMD} -d -ext "${FLOW_TAPAD_FILE}" -linelength 2000 -head "${TAPENADE_HEAD_ROUTINE}(${DEP_VAR})/(${IND_VARS})" ${SRC_AD_INPUT};\
	else\
		echo @@@@@@@@@@@@@ TAPENADE FYI @@@@@@@@@@@@@@;\
		echo Not executing tapenade TLM command again!;\
		echo Compiling explicitly files with I/O probably added!;\
		${F90C} ${LISFLAG} ${NETCDF_F90_FLAG} -I./ ${F90FLAGS} -o sicopolis_tapenade_cpp_d.o -c sicopolis_tapenade_cpp_d.f90;\
		${F90C} ${LISFLAG} ${NETCDF_F90_FLAG} -I./ ${F90FLAGS} -o sico_main_loop_m_cpp_d.o -c sico_main_loop_m_cpp_d.f90;\
	fi

driveradjoint:${LIBLIS} \
	${LIB_NETCDF_F90} \
	${SRC_HEADERS} \
	$(patsubst %.c,%.o,$(SRC_TAP)) \
	error_m_cpp.o \
	sico_types_m_cpp.o \
	compare_float_m_cpp.o \
	sico_maths_m_grad_cpp.o \
	subroutines/tapenade/src/diffsizes.o \
	${SICO_VARS_OBJ} \
	nc_check_m_cpp.o \
	PHONY_TAP_ADJ \
	${OBJ_AD_ADJ} \
	ad_input_m_cpp.o \
	ad_output_m_cpp.o \
	tapenade_main_cpp.o
	${F90C} ${F90FLAGS} -o $@ \
		error_m_cpp.o \
		sico_types_m_cpp.o \
		compare_float_m_cpp.o \
		sico_maths_m_grad_cpp.o \
		${SICO_VARS_OBJ} \
		nc_check_m_cpp.o \
		$(patsubst %.c,%.o,$(SRC_TAP)) \
		${OBJ_AD_ADJ} \
		ad_input_m_cpp.o \
		ad_output_m_cpp.o \
		subroutines/tapenade/src/diffsizes.o \
		tapenade_main_cpp.o \
		${LIBLISFLAG} \
		${LIB_NETCDF_F90_FLAG}

.PHONY = PHONY_TAP_ADJ
PHONY_TAP_ADJ: ${SRC_AD_INPUT}
	@if [ ! -f ${TAPENADE_CHECK_FILE_ADJ} ]; then\
		${TAPENADECMD} ${TAP_PROF_OPTION} -b -ext "${FLOW_TAPAD_FILE}" -linelength 2000 -head "${TAPENADE_HEAD_ROUTINE}(${DEP_VAR})/(${IND_VARS})" ${SRC_AD_INPUT};\
	else\
		echo @@@@@@@@@@@@@@@ TAPENADE FYI @@@@@@@@@@@@@@@@;\
		echo Not executing tapenade adjoint command again!;\
		echo Compiling explicitly files with I/O probably added!;\
		${F90C} ${LISFLAG} ${NETCDF_F90_FLAG} -I./ ${F90FLAGS} -o sicopolis_tapenade_cpp_b.o -c sicopolis_tapenade_cpp_b.f90;\
		${F90C} ${LISFLAG} ${NETCDF_F90_FLAG} -I./ ${F90FLAGS} -o sico_main_loop_m_cpp_b.o -c sico_main_loop_m_cpp_b.f90;\
	fi

RUN=$(HEADER)
INDIR=../sico_in
RESDIR=../sico_out/$(HEADER)

sico_specs.h: ../headers/sico_specs_$(HEADER).h
	cp $^ sico_specs.h

ad_specs.h: ../headers_ad/ad_$(HEADER).h
	cp $^ $@

drivernormal: sico_specs.h $(SRC_SICO) $(SRC)
	rm -rf ${OUT_PATH_NORMAL}
	sed -i 's/&__NL__//g' sico_specs.h
	${F90C} -I./ ${F90FLAGS} ${DEFINE_FLAGS_NORMAL} ${LISFLAG} ${NETCDF_F90_FLAG} -o sicopolis.o -c $(SRC)
	${F90C} ${F90FLAGS} -DNETCDF=1 -o $@ sicopolis.o ${LIBLISFLAG} ${LIB_NETCDF_F90_FLAG} -lm

drivergrdchk: sico_specs.h $(SRC_SICO) $(SRC_SICO_AD_COST) $(SRC) $(SRC_SICO_AD_GRDCHK)
	sed -i 's/&__NL__//g' sico_specs.h
	${F90C} -I./ ${F90FLAGS} ${DEFINE_FLAGS_GRDCHK} ${LISFLAG} ${NETCDF_F90_FLAG} -o sicopolis.o -c $(SRC)
	${F90C} ${F90FLAGS} -DNETCDF=1 -o $@ sicopolis.o ${LIBLISFLAG} ${LIB_NETCDF_F90_FLAG} -lm

drivergrdchk_cov: sico_specs.h $(SRC_SICO) $(SRC_SICO_AD_COST) $(SRC) $(SRC_SICO_AD_GRDCHK)
	sed -i 's/&__NL__//g' sico_specs.h
	${F90C} -I./ ${F90FLAGS_COV} ${DEFINE_FLAGS_GRDCHK} ${LISFLAG} ${NETCDF_F90_FLAG} -o sicopolis.o -c $(SRC)
	${F90C} ${F90FLAGS_COV} -DNETCDF=1 -o $@ sicopolis.o ${LIBLISFLAG} ${LIB_NETCDF_F90_FLAG} -lm

cov: sico_specs.h $(SRC_SICO) $(SRC_SICO_AD_COST) $(SRC)
	${GCOV} $(SRC_SICO) $(SRC_SICO_AD) $(SRC)

coverage.info: sico_specs.h $(SRC_SICO) $(SRC_SICO_AD_COST) $(SRC)
	${LCOV} --gcov-tool $(GCOV) --capture --directory . --output-file coverage.info

sicopolis.o: $(SRC_SICO) $(SRC_SICO_AD_COST) $(SRC_SICO_AD_CTRL) $(SRC) ad_specs.h
	sed -i 's/&__NL__//g' sico_specs.h
	${F90C} -I./ ${F90FLAGS} ${DEFINE_FLAGS_ADJOINT} ${DEFINE_FLAGS_GENCTRL} ${LISFLAG} ${NETCDF_F90_FLAG} -o sicopolis.o -c $(SRC)

subroutines/general/sico_maths_m.o : subroutines/general/sico_maths_m.F90
	${F90C} -DALLOW_TAPENADE ${LISFLAG} -I./ ${F90FLAGS} -o $@ -c $<

subroutines/tapenade/src/sico_maths_m_grad.o : subroutines/tapenade/src/sico_maths_m_grad.F90
	${F90C} -DALLOW_TAPENADE ${LISFLAG} -I./ ${F90FLAGS} -o $@ -c $<

sico_variables_m_cpp.f90: subroutines/general/sico_variables_m.F90
	${PYTHONCMD} subroutines/tapenade/utils/deal_with_metadata.py -SS ../headers/sico_specs_${HEADER}.h -SV subroutines/general/sico_variables_m.F90
	$(CPPCMD_FILES) > dummy.f90
	cat dummy.f90 > $@
	sed -i 's/__NL__/\n/g' $@
	

%.o : %.F90
	${F90C} -I./ ${F90FLAGS} -o $@ -c $<

%.o : %.f90
	${F90C} ${LISFLAG} ${NETCDF_F90_FLAG} -I./ ${F90FLAGS} -o $@ -c $< 

%.o : %.c
	${CC} ${CFLAGS} ${CFLAGS_PROF} -o $@ -c $<

%_cpp.f90: subroutines/general/%.F90
	$(CPPCMD_FILES) > dummy.f90
	cat dummy.f90 > $@
	sed -i 's/__NL__/\n/g' $@

%_cpp.f90: subroutines/tapenade/cost/%.F90
	$(CPPCMD_FILES) > dummy.f90
	cat dummy.f90 > $@
	sed -i 's/__NL__/\n/g' $@

%_cpp.f90: subroutines/tapenade/ctrl/%.F90
	$(CPPCMD_FILES) > dummy.f90
	cat dummy.f90 > $@
	sed -i 's/__NL__/\n/g' $@

%_cpp.f90: subroutines/tapenade/src/%.F90
	$(CPPCMD_FILES) > dummy.f90
	cat dummy.f90 > $@
	sed -i 's/__NL__/\n/g' $@

%_cpp.f90: subroutines/tapenade/ad_io/%.F90
	$(CPPCMD_FILES) > dummy.f90
	cat dummy.f90 > $@
	sed -i 's/__NL__/\n/g' $@

%_cpp.f90: subroutines/tapenade/stubs/%.F90
	$(CPPCMD_FILES) > dummy.f90
	cat dummy.f90 > $@
	sed -i 's/__NL__/\n/g' $@

%_cpp.f90: subroutines/${DOMAIN_SHORT}/%.F90
	$(CPPCMD_FILES) > dummy.f90
	cat dummy.f90 > $@
	sed -i 's/__NL__/\n/g' $@

%_cpp.f90: %.F90
	$(CPPCMD_FILES) > dummy.f90
	cat dummy.f90 > $@
	sed -i 's/__NL__/\n/g' $@

clean: 
	rm -f subroutines/tapenade/*/*.o\
		  subroutines/tapenade/*/*.mod\
          subroutines/general/*.o\
		  subroutines/general/*.mod\
		  ../test_ad/tapenade_F90_templates/*.o\
		  ../test_ad/tapenade_F90_templates/*.mod\
          sicopolis.o\
	rm -f dummy.f90\
			*_cpp.f90\
			*_cpp_b.f90\
			*_cpp_d.f90\
			*.o\
			*.h\
			*.msg\
			*.gcov\
			*.gcda\
			*.gcno\
			*.mod*\
			tapStack*\
			driver*\
			*~

cleanobj: 
	rm -f subroutines/tapenade/*/*.o \
              subroutines/general/*.o\
              *.o

.PHONY: clean
.PHONY: cleanobj
.PRECIOUS: ad_output_m_cpp.f90 nc_check_m_cpp.f90 sico_vars_m_cpp.f90 tapenade_main_cpp.f90 ad_input_m_cpp.f90 sico_maths_m_grad_cpp.f90
